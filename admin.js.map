{"version":3,"sources":["tinymce-select.js"],"names":["$","console","log","tinymce","ui","Select","TextBox","extend","init","settings","self","this","_super","renderHtml","attrs","elm","id","_id","hidefocus","class","util","Tools","each","name","disabled","subtype","type","document","createElement","setAttribute","index","values","length","value","text","key","innerHTML","renderInnerHtml","outerHTML","output","jQuery"],"mappings":"CAAA,SAAYA,GAERC,QAAQC,IAAK,QAGbC,QAAQC,GAAGC,OAASF,QAAQC,GAAGE,QAAQC,QAEnCC,KAAM,SAASC,GAEX,GAAIC,GAAOC,IACXD,GAAKE,OAAOH,GACZA,EAAWC,EAAKD,UAUpBI,WAAY,WACR,GAA2CC,GAAOC,EAA9CL,EAAOC,KAAMF,EAAWC,EAAKD,QAEjCK,IACIE,GAAIN,EAAKO,IACTC,UAAW,IACXC,QAAO,4CAGXhB,QAAQiB,KAAKC,MAAMC,MACf,YACD,SAASC,GACRT,EAAMS,GAAQd,EAASc,KAGvBb,EAAKc,aACLV,EAAMU,SAAW,YAGjBf,EAASgB,UACTX,EAAMY,KAAOjB,EAASgB,SAG1BV,EAAMY,SAASC,cAAc,SAC7B,KAAM,GAAIZ,KAAMF,GACZC,EAAIc,aAAcb,EAAIF,EAAME,GAGhC,KAAM,GAAIc,GAAQ,EAAGA,EAAQrB,EAASsB,OAAOC,OAAQF,IAAU,CAE3D,GAAIG,GAAQxB,EAASsB,OAAOD,GAAOI,KAC/BC,EAAM1B,EAASsB,OAAOD,GAAOG,KAEjClB,GAAIqB,WAAa1B,EAAK2B,gBAAiBF,EAAKF,GAKhD,MAAOlB,GAAIuB,WAIfD,gBAAiB,SAAUF,EAAKF,GAC5B,GAAIvB,GAAOC,IAGX,IAAmB,gBAAPwB,GAAkB,CAI1B,IAAM,GAFFI,GAAS,GAEHT,EAAQ,EAAGA,EAAQK,EAAIH,OAAQF,IAErCS,GAAU7B,EAAK2B,gBAAiBF,EAAIL,GAAOG,MAAOE,EAAIL,GAAOI,KAIjE,OAAO,oBAAsBD,EAAQ,KAAOM,EAAS,cAIrD,MAAO,kBAAoBJ,EAAM,KAAOF,EAAQ,gBAS3DO,QAGLvC,QAAQC,IAAKC,QAAQC,GAAGC","file":"admin.js","sourcesContent":["( function( $ ) {\n\n    console.log( 'load' );\n    //console.log( tinymce.ui.Widget );\n\n    tinymce.ui.Select = tinymce.ui.TextBox.extend( {\n\n        init: function(settings) {\n            \n            var self = this;\n            self._super(settings);\n            settings = self.settings;\n\n        },\n\n        /**\n         * Renders the control as a HTML string.\n         *\n         * @method renderHtml\n         * @return {String} HTML representing the control.\n         */\n        renderHtml: function() {\n            var self = this, settings = self.settings, attrs, elm;\n\n            attrs = {\n                id: self._id,\n                hidefocus: '1',\n                class: 'mce-textbox mce-abs-layout-item mce-last',\n            };\n\n            tinymce.util.Tools.each([\n                'required',\n            ], function(name) {\n                attrs[name] = settings[name];\n            });\n\n            if (self.disabled()) {\n                attrs.disabled = 'disabled';\n            }\n\n            if (settings.subtype) {\n                attrs.type = settings.subtype;\n            }\n\n            elm = document.createElement('select');\n            for ( var id in attrs ) {\n                elm.setAttribute( id, attrs[id] );\n            }\n            \n            for ( var index = 0; index < settings.values.length; index++ ) {\n                \n                var value = settings.values[index].text;\n                var key = settings.values[index].value;\n                \n                elm.innerHTML += self.renderInnerHtml( key, value );\n                \n                //elm.innerHTML += '<option value=\"' + key + '\">' + value + '</option>';\n            }\n\n            return elm.outerHTML;\n\n        },\n        \n        renderInnerHtml: function( key, value ) {\n            var self = this;\n            \n            // key is the value of our HTML object. Yes, it is confusing.\n            if ( typeof key == 'object' ) {\n                \n                var output = '';\n                \n                for ( var index = 0; index < key.length; index++ ) {\n                    \n                    output += self.renderInnerHtml( key[index].value, key[index].text );\n                    \n                }\n                \n                return '<optgroup label=\"' + value + '\">' + output + '</optgroup>';\n                \n            }\n            else {\n                return '<option value=\"' + key + '\">' + value + '</option>';\n            }\n            \n            return true;\n            \n        }\n        \n    } );\n\n} )( jQuery );\n\n\nconsole.log( tinymce.ui.Select );"],"sourceRoot":"/source/"}